<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns="http://mobile.sensis.com.au/web/component/core/device"
    targetNamespace="http://mobile.sensis.com.au/web/component/core/device"
    elementFormDefault="unqualified" attributeFormDefault="unqualified"
    version="1.0">

    <xs:annotation>
        <xs:documentation>
            Schema for defining file bundles that are be created by concatenating sets of files.
            For example, using for defining JavaScript bundles. 
        </xs:documentation>
    </xs:annotation>

    <!-- ================================================================== -->
    <!-- Top level element. -->
    
    <xs:element name="deviceConfigs" type="DeviceConfigs" >
    
    </xs:element>
    
    <!-- ================================================================== -->
    <!-- Types -->
    
    <xs:complexType name="DeviceConfigs">
        <xs:annotation>
            <xs:documentation>
                Container for one or more device configurations.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="identifiedDeviceConfig" type="IdentifiedDeviceConfig" minOccurs="1" maxOccurs="unbounded"/>
            <xs:element name="defaultDeviceConfig" type="AbstractDeviceConfig" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="IdentifiedDeviceConfig">
        <xs:annotation>
            <xs:documentation>
                Device configuration for a device that has already been at least partially identified.
                At the time of writing (26 Mar 2010), this "partial" identification means that the deviceId
                has been matched in the Volantis device repository to the current device. 
            </xs:documentation>
        </xs:annotation>
        
        <xs:sequence>
            <xs:element name="deviceId" type="xs:string" minOccurs="1" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                        Unique id of the device. At the time of writing (26 Mar 2010), this id 
                        corresponds to the device names in the Volantis device repository. Note that the repository
                        is hierarchical. eg. "Apple" refers to a whole bunch of devices, including the Apple iphone. 
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="deviceConfig" type="AbstractDeviceConfig" minOccurs="1" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                        Configuration to use if the deviceId matches the device but there are no userAgentDeviceConfigs
                        that match.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="userAgentDeviceConfig" type="UserAgentDeviceConfig" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        User agent specific configs to be used instead of the deviceConfig above if the user agent
                        of the device matches.
                    </xs:documentation>
                </xs:annotation>            
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    
    <xs:complexType name="UserAgentDeviceConfig">
        <xs:annotation>
            <xs:documentation>
                Configuration for devices that have a user agent matching a given regex. 
            </xs:documentation>
        </xs:annotation>
        
        <xs:sequence>
            <xs:element name="useragentRegex" type="xs:string" minOccurs="1" maxOccurs="1"/>
            <xs:element name="deviceConfig" type="AbstractDeviceConfig" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>
    
    <xs:complexType name="AbstractDeviceConfig" abstract="true">
        <xs:annotation>
            <xs:documentation>
                Abstract configuration for a device. Components should extend this to add configuration
                that they need. 
            </xs:documentation>
        </xs:annotation>
        
        <xs:sequence>
            <xs:element name="includeJavaScript" type="xs:boolean" minOccurs="0" maxOccurs="1" default="false">
                <xs:annotation>
                    <xs:documentation>
                        Generic flag that a component can check to see if it should include JavaScript
                        in its delivery. Note that this is applied on top of the Volantis mscr files. For example,
                        with hi end maps, we need to control delivery based on the Apple firmware version, a 
                        detection that Volantis doesn't provide for in its mscr files. Further note that 
                        a component need not necessarily use this flag. It may use a more component
                        specific flag instead.  
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    
</xs:schema>
